name: Java CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-x64:
    name: Build x64
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Build and test
        run: mvn clean verify

      - name: Create runtime image
        run: mvn javafx:jlink

      - name: Copy RetroLauncher script for Windows
        if: matrix.os == 'windows-latest'
        run: |
          copy scripts\RetroLauncher.bat target\RetroLauncher\RetroLauncher.bat

      - name: Copy RetroLauncher script for Unix/macOS
        if: matrix.os != 'windows-latest'
        run: |
          cp scripts/RetroLauncher.sh target/RetroLauncher/RetroLauncher.sh
          chmod +x target/RetroLauncher/RetroLauncher.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: RetroLauncher-${{ matrix.os }}-x64
          path: target/RetroLauncher

  build-arm64:
    name: Build arm64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-arm64
          restore-keys: |
            ${{ runner.os }}-buildx-arm64

      - name: Build and test arm64 using Docker
        run: |
          docker run --rm \
            --platform linux/arm64 \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            arm64v8/openjdk:17-jdk \
            bash -c "mvn clean verify"

      - name: Create runtime image arm64 using Docker
        run: |
          docker run --rm \
            --platform linux/arm64 \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            arm64v8/openjdk:17-jdk \
            bash -c "mvn javafx:jlink"

      - name: Copy RetroLauncher script for Unix/macOS arm64
        run: |
          cp scripts/RetroLauncher.sh target/RetroLauncher/RetroLauncher.sh
          chmod +x target/RetroLauncher/RetroLauncher.sh

      - name: Upload arm64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: RetroLauncher-ubuntu-arm64
          path: target/RetroLauncher